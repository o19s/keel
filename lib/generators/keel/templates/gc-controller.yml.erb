apiVersion: v1
kind: ReplicationController
metadata:
  name: <%= @params[:deploy_env] %>-<%= @params[:app] %>-ctl
  labels:
    app: <%= @params[:app] %>
  namespace: <%= @params[:deploy_env] %>
spec:
  replicas: 1
  selector:
    app: <%= @params[:app] %>
  template:
    metadata:
      name: <%= @params[:app] %>
      labels:
        app: <%= @params[:app] %>
    spec:
      volumes:
      - name: secret-volume
        secret:
          secretName: cloud-sql-creds
      - name: ssl-certs
        hostPath:
          path: /etc/ssl/certs
      - name: cloudsql
        emptyDir:
      containers:
      - name: <%= @params[:app] %>
        image: <%= @params[:container_app_image_path] %>:latest
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 100m
        env:
        - name: DATABASE_URL
          value: <%= @params[:database_url] %>
        - name: SECRET_KEY_BASE
          value: <%= @params[:secret_key] %>
        - name: RAILS_ENV
          value: <%= @params[:rails_env] %>
        <%- @params[:env_variables].each do |name, value| -%>
        - name: <%= name.to_s.upcase %>
          value: <%= value %>
        <%- end unless @params[:env_variables].blank? -%>
        volumeMounts:
        - name: cloudsql
          mountPath: /cloudsql
      - name: cloud-sql-proxy
        image: <%= @params[:container_cloud_sql_image_path] %>
        volumeMounts:
        - name: cloudsql
          mountPath: /cloudsql
        - name: secret-volume
          mountPath: /secret/
        - name: ssl-certs
          mountPath: /etc/ssl/certs
        command: ["/cloud_sql_proxy", "-dir=/cloudsql", "-credential_file=/secret/creds.json", "-instances=<%= @params[:container_cluster] %>:<%= @params[:compute_region] %>:<%= @params[:cloud_sql_instance] %>"]
